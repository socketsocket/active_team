server {
  listen       8080 ;
  server_name  localhost ;
  CLIENT_BODY_LIMIT  2048 ;
  error_page   404 ./404.html ;
  auto_index  on ;

  # serve static files
  location / {
    root /html/ ;
    index index.html ;
    auto_index on ;

    error_page   404 ./404.html ;
    methods_allowed GET POST DELETE ;
    cgi_info .php ./php_tester ;
  }

  location /2/ {
    root /second/ ;
    index index.html ;
    auto_index on ;
    error_page 401 ./401.html ;
    error_page 402 ./402.html ;

    methods_allowed GET POST ;
    cgi_info .py ./python_tester ;
  }

  # 다시다시다시다시
  # 301의 경우 // 영구히 리소스가 옮겨진 경우 리소스는 새 URL이 부여되어 새로운 위치로 옮겨졌거나 이름이 바뀌었을 수 있다.
  # 웹 서버는 클라이언트에게 리소스의 이름이 바뀌었으므로， 클라이언트는 북마크를 갱신하거나 할 수 있다고 말해줄 수 있다.
  # Your HTTP response status codes must be accurate.

  # 307(tmp redirection) 301 (permanent)
  # 303이나 307 //이름 변경이 임시적이기 때문에， 서버는 클라이언트가 나중에는 원래 URl로 찾아오고 북마크도 갱신하지 않기를 원한다.
  # 303 See Other와 307 Temporary Redirect 상태 코드는 이런 종류의 리다이렉트를 위해사용된다.
  location /redir/ {
    methods_allowed GET ;
    # POST -> Error 403 //// -> GET -> Redirect
    return 301 https://www.naver.com ;
  }
}

#server {
#	  return 301 https://www.google.com
#}

